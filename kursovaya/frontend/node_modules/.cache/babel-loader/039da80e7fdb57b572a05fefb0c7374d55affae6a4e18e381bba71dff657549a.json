{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Super\\\\kursovaya\\\\frontend\\\\src\\\\components\\\\EditEmployeeService.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { fetchEmployeeServices, updateEmployeeServiceAsync } from '../redux/employeeServiceSlice';\nimport { fetchEmployees, fetchServices } from '../redux/employeeServiceSlice';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport styles from '../styles/components/EditForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditEmployeeService = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    employeeId: 0,\n    serviceId: 0\n  });\n  const [employees, setEmployees] = useState([]);\n  const [services, setServices] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeServicesResponse = await dispatch(fetchEmployeeServices());\n        const employeeService = employeeServicesResponse.payload.find(es => es.employeeServiceId === Number(id));\n        if (employeeService) {\n          setFormData({\n            employeeId: employeeService.employeeId,\n            serviceId: employeeService.serviceId\n          });\n        }\n        const employeesResponse = await dispatch(fetchEmployees());\n        setEmployees(employeesResponse.payload);\n        const servicesResponse = await dispatch(fetchServices());\n        setServices(servicesResponse.payload);\n      } catch (error) {\n        console.error('Ошибка при получении данных', error);\n      }\n    };\n    fetchData();\n  }, [dispatch, id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: parseInt(value)\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await dispatch(updateEmployeeServiceAsync({\n        employeeServiceId: Number(id),\n        employeeName: '',\n        serviceName: '',\n        employeeId: formData.employeeId,\n        serviceId: formData.serviceId\n      }));\n      alert('Связь обновлена');\n      navigate('/employeeservices');\n    } catch (error) {\n      console.error('Ошибка при обновлении связи', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u044F\\u0437\\u044C \\u043C\\u0435\\u0436\\u0434\\u0443 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u043E\\u043C \\u0438 \\u0443\\u0441\\u043B\\u0443\\u0433\\u043E\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEmployee\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"employeeId\",\n              value: formData.employeeId,\n              onChange: e => handleChange(e),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: employee.employeeId,\n                children: employee.name\n              }, employee.employeeId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formService\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0423\\u0441\\u043B\\u0443\\u0433\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"serviceId\",\n              value: formData.serviceId,\n              onChange: e => handleChange(e),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: service.serviceId,\n                children: service.name\n              }, service.serviceId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"mt-3\",\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(EditEmployeeService, \"1iuH0tfdZLCN3YMq7C8Zkb0uqDI=\", false, function () {\n  return [useParams, useNavigate, useDispatch];\n});\n_c = EditEmployeeService;\nexport default EditEmployeeService;\nvar _c;\n$RefreshReg$(_c, \"EditEmployeeService\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useDispatch","fetchEmployeeServices","updateEmployeeServiceAsync","fetchEmployees","fetchServices","Container","Form","Button","Row","Col","styles","jsxDEV","_jsxDEV","EditEmployeeService","_s","id","navigate","dispatch","formData","setFormData","employeeId","serviceId","employees","setEmployees","services","setServices","fetchData","employeeServicesResponse","employeeService","payload","find","es","employeeServiceId","Number","employeesResponse","servicesResponse","error","console","handleChange","e","name","value","target","parseInt","handleSubmit","preventDefault","employeeName","serviceName","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","md","Group","controlId","Label","Control","as","onChange","required","map","employee","service","variant","type","_c","$RefreshReg$"],"sources":["C:/Users/Super/kursovaya/frontend/src/components/EditEmployeeService.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../redux/store';\nimport { fetchEmployeeServices, updateEmployeeServiceAsync, EmployeeService } from '../redux/employeeServiceSlice';\nimport { fetchEmployees, fetchServices } from '../redux/employeeServiceSlice';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport styles from '../styles/components/EditForm.module.css';\n\ninterface Employee {\n  employeeId: number;\n  name: string;\n}\n\ninterface Service {\n  serviceId: number;\n  name: string;\n}\n\nconst EditEmployeeService: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const [formData, setFormData] = useState({\n    employeeId: 0,\n    serviceId: 0\n  });\n  const [employees, setEmployees] = useState<Employee[]>([]);\n  const [services, setServices] = useState<Service[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeeServicesResponse = await dispatch(fetchEmployeeServices());\n        const employeeService = (employeeServicesResponse.payload as EmployeeService[]).find((es) => es.employeeServiceId === Number(id));\n\n        if (employeeService) {\n          setFormData({\n            employeeId: employeeService.employeeId,\n            serviceId: employeeService.serviceId\n          });\n        }\n\n        const employeesResponse = await dispatch(fetchEmployees());\n        setEmployees(employeesResponse.payload);\n\n        const servicesResponse = await dispatch(fetchServices());\n        setServices(servicesResponse.payload);\n      } catch (error) {\n        console.error('Ошибка при получении данных', error);\n      }\n    };\n    fetchData();\n  }, [dispatch, id]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: parseInt(value)\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await dispatch(updateEmployeeServiceAsync({\n        employeeServiceId: Number(id),\n        employeeName: '',\n        serviceName: '',\n        employeeId: formData.employeeId,\n        serviceId: formData.serviceId\n      }));\n      alert('Связь обновлена');\n      navigate('/employeeservices');\n    } catch (error) {\n      console.error('Ошибка при обновлении связи', error);\n    }\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <h2 className=\"text-center mb-4\">Редактировать связь между сотрудником и услугой</h2>\n      <Form className={styles.form} onSubmit={handleSubmit}>\n        <Row>\n          <Col md={12}>\n            <Form.Group controlId=\"formEmployee\">\n              <Form.Label>Сотрудник</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"employeeId\"\n                value={formData.employeeId}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleChange(e)}\n                required\n              >\n                <option value={0}>Выберите сотрудника</option>\n                {employees.map((employee) => (\n                  <option key={employee.employeeId} value={employee.employeeId}>\n                    {employee.name}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"formService\">\n              <Form.Label>Услуга</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"serviceId\"\n                value={formData.serviceId}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleChange(e)}\n                required\n              >\n                <option value={0}>Выберите услугу</option>\n                {services.map((service) => (\n                  <option key={service.serviceId} value={service.serviceId}>\n                    {service.name}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n          Сохранить\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default EditEmployeeService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}