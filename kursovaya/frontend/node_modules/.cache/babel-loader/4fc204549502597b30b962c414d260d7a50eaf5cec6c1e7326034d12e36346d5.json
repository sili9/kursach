{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Super\\\\kursovaya\\\\frontend\\\\src\\\\components\\\\AddEmployeeService.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addEmployeeServiceAsync, fetchEmployees, fetchServices } from '../redux/employeeServiceSlice';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport styles from '../styles/components/AddForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEmployeeService = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [employees, setEmployees] = useState([]);\n  const [services, setServices] = useState([]);\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState(0);\n  const [selectedServiceId, setSelectedServiceId] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeesResponse = await dispatch(fetchEmployees());\n        setEmployees(employeesResponse.payload);\n        const servicesResponse = await dispatch(fetchServices());\n        setServices(servicesResponse.payload);\n      } catch (error) {\n        console.error('Ошибка при получении данных', error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n  const handleEmployeeChange = e => {\n    setSelectedEmployeeId(parseInt(e.target.value));\n  };\n  const handleServiceChange = e => {\n    setSelectedServiceId(parseInt(e.target.value));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedEmployeeId || !selectedServiceId) {\n      alert('Необходимо выбрать сотрудника и услугу');\n      return;\n    }\n    try {\n      await dispatch(addEmployeeServiceAsync({\n        employeeId: selectedEmployeeId,\n        serviceId: selectedServiceId\n      }));\n      alert('Связь между сотрудником и услугой добавлена');\n      setSelectedEmployeeId(0);\n      setSelectedServiceId(0);\n    } catch (error) {\n      console.error('Ошибка при добавлении связи', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0432\\u044F\\u0437\\u044C \\u043C\\u0435\\u0436\\u0434\\u0443 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u043E\\u043C \\u0438 \\u0443\\u0441\\u043B\\u0443\\u0433\\u043E\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEmployee\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedEmployeeId,\n              onChange: e => handleEmployeeChange(e),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: employee.employeeId,\n                children: employee.name\n              }, employee.employeeId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formService\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0423\\u0441\\u043B\\u0443\\u0433\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: selectedServiceId,\n              onChange: e => handleServiceChange(e),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0443\\u0441\\u043B\\u0443\\u0433\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: service.serviceId,\n                children: service.name\n              }, service.serviceId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"mt-3\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AddEmployeeService, \"DAyWCtizp7S1JDFLzIvZfddJxr8=\", false, function () {\n  return [useDispatch];\n});\n_c = AddEmployeeService;\nexport default AddEmployeeService;\nvar _c;\n$RefreshReg$(_c, \"AddEmployeeService\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","addEmployeeServiceAsync","fetchEmployees","fetchServices","Container","Form","Button","Row","Col","styles","jsxDEV","_jsxDEV","AddEmployeeService","_s","dispatch","employees","setEmployees","services","setServices","selectedEmployeeId","setSelectedEmployeeId","selectedServiceId","setSelectedServiceId","fetchData","employeesResponse","payload","servicesResponse","error","console","handleEmployeeChange","e","parseInt","target","value","handleServiceChange","handleSubmit","preventDefault","alert","employeeId","serviceId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","md","Group","controlId","Label","Control","as","onChange","required","map","employee","name","service","variant","type","_c","$RefreshReg$"],"sources":["C:/Users/Super/kursovaya/frontend/src/components/AddEmployeeService.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../redux/store';\nimport { addEmployeeServiceAsync, fetchEmployees, fetchServices } from '../redux/employeeServiceSlice';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport styles from '../styles/components/AddForm.module.css';\n\ninterface Employee {\n  employeeId: number;\n  name: string;\n}\n\ninterface Service {\n  serviceId: number;\n  name: string;\n}\n\nconst AddEmployeeService: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const [employees, setEmployees] = useState<Employee[]>([]);\n  const [services, setServices] = useState<Service[]>([]);\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState<number>(0);\n  const [selectedServiceId, setSelectedServiceId] = useState<number>(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const employeesResponse = await dispatch(fetchEmployees());\n        setEmployees(employeesResponse.payload);\n        const servicesResponse = await dispatch(fetchServices());\n        setServices(servicesResponse.payload);\n      } catch (error) {\n        console.error('Ошибка при получении данных', error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n\n  const handleEmployeeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedEmployeeId(parseInt(e.target.value));\n  };\n\n  const handleServiceChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedServiceId(parseInt(e.target.value));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!selectedEmployeeId || !selectedServiceId) {\n      alert('Необходимо выбрать сотрудника и услугу');\n      return;\n    }\n\n    try {\n      await dispatch(addEmployeeServiceAsync({ employeeId: selectedEmployeeId, serviceId: selectedServiceId }));\n      alert('Связь между сотрудником и услугой добавлена');\n      setSelectedEmployeeId(0);\n      setSelectedServiceId(0);\n    } catch (error) {\n      console.error('Ошибка при добавлении связи', error);\n    }\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <h2 className=\"text-center mb-4\">Добавить связь между сотрудником и услугой</h2>\n      <Form className={styles.form} onSubmit={handleSubmit}>\n        <Row>\n          <Col md={12}>\n            <Form.Group controlId=\"formEmployee\">\n              <Form.Label>Сотрудник</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={selectedEmployeeId}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleEmployeeChange(e as any)}\n                required\n              >\n                <option value={0}>Выберите сотрудника</option>\n                {employees.map((employee) => (\n                  <option key={employee.employeeId} value={employee.employeeId}>\n                    {employee.name}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"formService\">\n              <Form.Label>Услуга</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={selectedServiceId}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleServiceChange(e as any)}\n                required\n              >\n                <option value={0}>Выберите услугу</option>\n                {services.map((service) => (\n                  <option key={service.serviceId} value={service.serviceId}>\n                    {service.name}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n          Добавить\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default AddEmployeeService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}