{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport apiClient from '../utils/apiClient';\nconst initialState = {\n  log1n: null,\n  isRegistered: false\n};\nexport const fetchLogpass = createAsyncThunk('logpass/fetchLogpass', async () => {\n  const response = await apiClient.get('/logpass');\n  return response.data;\n});\nexport const deleteService = createAsyncThunk('logpass/deleteLogpass', async id => {\n  await apiClient.delete(`/logpass/${id}`);\n  return id;\n});\nconst registerSlice = createSlice({\n  name: 'register',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      const user = {\n        id: '1',\n        email: action.payload.email,\n        password: action.payload.password\n      };\n      state.isRegistered = true;\n      state.log1n = user;\n    },\n    logout: state => {\n      state.log1n = null;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = registerSlice.actions;\nexport default registerSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","apiClient","initialState","log1n","isRegistered","fetchLogpass","response","get","data","deleteService","id","delete","registerSlice","name","reducers","login","state","action","user","email","payload","password","logout","actions","reducer"],"sources":["C:/Users/Super/kursovaya/frontend/src/redux/logpassSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RegisterFormData, RegisterState, User } from '../types/logpass.types';\nimport apiClient from '../utils/apiClient';\n\n\nconst initialState: RegisterState = {\n  log1n: null,\n  isRegistered: false\n};\n\n\nexport const fetchLogpass = createAsyncThunk('logpass/fetchLogpass', async () => {\n  const response = await apiClient.get('/logpass');\n  return response.data;\n});\n\nexport const deleteService = createAsyncThunk('logpass/deleteLogpass', async (id: number) => {\n  await apiClient.delete(`/logpass/${id}`);\n  return id;\n});\n\n\nconst registerSlice = createSlice({\n  name: 'register',\n  initialState,\n  reducers: {\n    login: (state, action: PayloadAction<RegisterFormData>) => {\n      const user: User = {\n        id: '1',\n        email: action.payload.email,\n        password: action.payload.password\n      };\n      state.isRegistered = true;\n      state.log1n = user;\n    },\n    logout: (state) => {\n      state.log1n = null;\n    }\n  }\n});\n\nexport const { login, logout } = registerSlice.actions;\nexport default registerSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAE/E,OAAOC,SAAS,MAAM,oBAAoB;AAG1C,MAAMC,YAA2B,GAAG;EAClCC,KAAK,EAAE,IAAI;EACXC,YAAY,EAAE;AAChB,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAAC,sBAAsB,EAAE,YAAY;EAC/E,MAAMO,QAAQ,GAAG,MAAML,SAAS,CAACM,GAAG,CAAC,UAAU,CAAC;EAChD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGV,gBAAgB,CAAC,uBAAuB,EAAE,MAAOW,EAAU,IAAK;EAC3F,MAAMT,SAAS,CAACU,MAAM,CAAE,YAAWD,EAAG,EAAC,CAAC;EACxC,OAAOA,EAAE;AACX,CAAC,CAAC;AAGF,MAAME,aAAa,GAAGZ,WAAW,CAAC;EAChCa,IAAI,EAAE,UAAU;EAChBX,YAAY;EACZY,QAAQ,EAAE;IACRC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAuC,KAAK;MACzD,MAAMC,IAAU,GAAG;QACjBR,EAAE,EAAE,GAAG;QACPS,KAAK,EAAEF,MAAM,CAACG,OAAO,CAACD,KAAK;QAC3BE,QAAQ,EAAEJ,MAAM,CAACG,OAAO,CAACC;MAC3B,CAAC;MACDL,KAAK,CAACZ,YAAY,GAAG,IAAI;MACzBY,KAAK,CAACb,KAAK,GAAGe,IAAI;IACpB,CAAC;IACDI,MAAM,EAAGN,KAAK,IAAK;MACjBA,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEY,KAAK;EAAEO;AAAO,CAAC,GAAGV,aAAa,CAACW,OAAO;AACtD,eAAeX,aAAa,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}